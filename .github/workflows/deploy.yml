name: Build, Test, and Deploy

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '22'
  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

jobs:
  # Code Quality and Testing Job (relaxed for hackathon)
  quality:
    name: Code Quality & Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: TypeScript type checking (relaxed)
        run: npm run type-check || echo "TypeScript check failed but continuing for hackathon"
        continue-on-error: true

      - name: ESLint code quality check (relaxed)
        run: npm run lint || echo "Linting failed but continuing for hackathon"
        continue-on-error: true

      - name: Prettier formatting check (relaxed)
        run: npm run format:check || echo "Formatting check failed but continuing for hackathon"
        continue-on-error: true

      - name: Run unit tests (relaxed)
        run: npm run test || echo "Tests failed but continuing for hackathon"
        continue-on-error: true

      - name: Upload coverage reports (optional)
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
        continue-on-error: true

  # Build and Deploy Job (independent of quality checks)
  build-deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest
    # needs: quality  # Removed dependency so deployment can run even if quality checks fail
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: Optimize build assets (disabled for hackathon)
        run: |
          echo "Skipping asset optimization for hackathon project"
          # Note: For production, you might want to add:
          # npx imagemin dist/**/*.{jpg,jpeg,png,gif,svg} --out-dir=dist --plugin=mozjpeg --plugin=pngquant --plugin=svgo
          # find dist -type f \( -name "*.js" -o -name "*.css" -o -name "*.html" -o -name "*.json" \) -exec gzip -k {} \;
          
      - name: Deploy to Netlify (Production)
        if: github.ref == 'refs/heads/main'
        uses: netlify/actions/cli@master
        with:
          args: deploy --prod --dir=dist --message="Production deploy from GitHub Actions"
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          
      - name: Deploy to Netlify (Preview)
        if: github.ref == 'refs/heads/develop'
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir=dist --message="Preview deploy from GitHub Actions"
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_PREVIEW_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          
      - name: Get deployment URL
        id: deployment
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "url=https://liftfire.app" >> $GITHUB_OUTPUT
          else
            echo "url=https://develop--liftfire.netlify.app" >> $GITHUB_OUTPUT
          fi

  # Lighthouse CI Performance Monitoring (disabled for hackathon)
  # lighthouse:
  #   name: Lighthouse CI
  #   runs-on: ubuntu-latest
  #   needs: build-deploy
  #   if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
  #
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 22
  #         cache: 'npm'
  #
  #     - name: Install Lighthouse CI
  #       run: npm install -g @lhci/cli@0.12.x
  #
  #     - name: Run Lighthouse CI
  #       run: lhci autorun
  #       env:
  #         LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
  #         LHCI_SERVER_BASE_URL: ${{ secrets.LHCI_SERVER_BASE_URL }}
  #         LHCI_BUILD_CONTEXT__CURRENT_HASH: ${{ github.sha }}
  #         LHCI_BUILD_CONTEXT__COMMIT_TIME: ${{ github.event.head_commit.timestamp }}
  #         LHCI_BUILD_CONTEXT__CURRENT_BRANCH: ${{ github.ref_name }}
  #         LHCI_BUILD_CONTEXT__COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

  # Deployment Status Notifications (disabled for hackathon)
  # notify:
  #   name: Deployment Notifications
  #   runs-on: ubuntu-latest
  #   needs: [build-deploy, lighthouse]
  #   if: always()
  #
  #   steps:
  #     - name: Deployment Success Notification
  #       if: needs.build-deploy.result == 'success'
  #       uses: 8398a7/action-slack@v3
  #       with:
  #         status: success
  #         channel: '#deployments'
  #         text: |
  #           ‚úÖ LiftFire Marketing Website deployed successfully!
  #
  #           Branch: ${{ github.ref_name }}
  #           Commit: ${{ github.sha }}
  #           Author: ${{ github.actor }}
  #
  #           üîó Live URL: ${{ needs.build-deploy.outputs.url }}
  #           üìä Lighthouse: Performance audit completed
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #
  #     - name: Deployment Failure Notification
  #       if: needs.build-deploy.result == 'failure'
  #       uses: 8398a7/action-slack@v3
  #       with:
  #         status: failure
  #         channel: '#deployments'
  #         text: |
  #           ‚ùå LiftFire Marketing Website deployment failed!
  #
  #           Branch: ${{ github.ref_name }}
  #           Commit: ${{ github.sha }}
  #           Author: ${{ github.actor }}
  #
  #           Please check the GitHub Actions logs for details.
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #
  #     - name: Performance Alert
  #       if: needs.lighthouse.result == 'failure'
  #       uses: 8398a7/action-slack@v3
  #       with:
  #         status: warning
  #         channel: '#performance'
  #         text: |
  #           ‚ö†Ô∏è LiftFire Marketing Website performance issues detected!
  #
  #           Branch: ${{ github.ref_name }}
  #           Lighthouse CI failed performance thresholds.
  #
  #           Please review the Lighthouse report and optimize accordingly.
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
